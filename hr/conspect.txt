Meta классы Django

abstract = [True, False] позваоляет создать абстрактный класс которые не сохранится в базе данных но от которового можно будет наследоватся другим класса

app_label = [str] добовляет в начале название модели нашу строку и подчеркивание str_модель 

base_manager_name = [str] позволяет изменять стандартный objects на наш 

db_table = [str] изменяет имя таблицы 

db_tablespace = [str] позволяет указать табличное пространство !?

default_related_name = [str] тоже само что и related_name которые указывается в поле только тут оно указавыется в мета классе и применяется ко всем обртным связям этой модели

get_latest_by = [str] указывается поле по которому будет производится поисск первого элемента ....objects.latest() - сразу будет искать по тому значению которые мы указали в обычном случае пришло бы писать 
                                                                                                                                                                                     ....objects.lates(str) 
managed = [True, False] если False то не создаст таблицу в базе данных и не будет ею управлять через миграции дефолту True